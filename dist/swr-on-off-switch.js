define(["jquery","underscore","angular","qlik","./properties","./initialproperties","./lib/js/extensionUtils","text!./lib/css/style.css","text!./lib/partials/template.ng.html"],function($,_,angular,qlik,props,initProps,extensionUtils,cssContent,ngTemplate){"use strict";return extensionUtils.addStyleToHeader(cssContent),{definition:props,initialProperties:initProps,snapshot:{canTakeSnapshot:!1},template:ngTemplate,controller:["$scope",function($scope){function stringToBoolean(string){switch(string.toLowerCase()){case"true":case"yes":case"1":return!0;case"false":case"no":case"0":case null:return!1;default:return Boolean(string)}}var app=qlik.currApp(),varName=$scope.layout.props.varName;$scope.isSelected=null;var init=function(numTries){return numTries||(console.info("first try"),numTries=0),numTries>2?void console.error("Tried 3 times to get the value for "+varName+", didn't succeed ..."):(numTries>0&&console.info("try it again"),void app.variable.getContent(varName).then(function(reply){$scope.isSelected=stringToBoolean(reply.qContent.qString),console.log("Initial value for "+varName,reply)})["catch"](function(){numTries++,console.error("Error for "+varName+", try it again"),init(numTries)}))};$scope.$watch("isSelected",function(newVal,oldVal){console.log("SELECTED: ",newVal+" (old=>"+oldVal+")"),null!==newVal&&newVal!==oldVal&&(console.log("--variable values has changed, send it to the engine"),app.variable.setContent(varName,"=("+(newVal===!0?1:0)+")").then(function(reply){angular.noop(),console.log("after setting var value",reply)})["catch"](function(reply){console.error("error setting value",reply)}))}),$scope.$watch("layout.props.varName",function(newVal,oldVal){console.log("VARNAME: ",newVal+" (old=>"+oldVal+")"),newVal!==oldVal&&(console.log("--variable name has changed, init"),init())}),init()}]}});